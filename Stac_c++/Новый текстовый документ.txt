#include <iostream>
using namespace std;

//-----------------------------------------------------------------------------

typedef size_t stack_data;
typedef int    stack_pars;

const stack_data STACK_CANARY       = 184876268;
const stack_data STACK_POISON       = 0;
const stack_data MIN_STACK_CAPACITY = 16
;
const float INC_CAPACITY_COEFF = 2;
const float DEC_CAPACITY_COEFF = 0.5;

//-----------------------------------------------------------------------------

class stack
{
  private:
    stack_data *data_;
    stack_pars size_;
    stack_pars capacity_;

    void change_capacity (float change_value);
    char check ();
  public:
    stack  ();
    ~stack ();

    char       push (stack_data element);
    stack_data pop  ();

    void       print_data ();
};

stack::stack ():
  data_     (new stack_data [MIN_STACK_CAPACITY + 2]),
  capacity_ (MIN_STACK_CAPACITY),
  size_     (0)
  {
    data_[0]                      = STACK_CANARY;
    data_[MIN_STACK_CAPACITY + 1] = STACK_CANARY;
    cout << "\nHello! I was born!\n";
  }

stack::~stack ()
{
  delete [] data_;
}

char stack::push (stack_data element)
{
  if (capacity_ >= size_ + 1)
  {
    size_++;
    data_[size_] = element;

    return 0;
  }
}

stack_data stack::pop ()
{
  if (size_ > 0)
  {
    stack_data element = data_[size_];
    data_[size_] = STACK_POISON;
    size_--;

    return element;
  }

  return STACK_POISON;
}

int main()
{
  stack s;
  s.push (42);
  cout << s.pop();
  cout << " ";
  cout << s.pop();
  return 0;
}
